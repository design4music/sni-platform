# Content Cleaning Configuration
# Domain-agnostic rules for extracting clean article content

# Domains that commonly have AMP versions (hint for AMP-first extraction)
amp_first_hints:
  - "indiatimes.com"
  - "newsus.cgtn.com"
  - "dw.com"
  - "presstv.ir"
  - "thehindu.com"
  - "reuters.com"
  - "bbc.com"
  - "cnn.com"

# Paragraph filtering thresholds
min_par_chars: 25                    # Drop paragraphs shorter than this
max_link_density: 0.4                # Drop if link text / total text > this ratio
max_upper_ratio: 0.7                 # Drop if uppercase ratio > this (except short headings)
menu_upper_ratio: 0.6                # Detect navigation menus if uppercase > this
menu_min_tokens: 8                   # Navigation menus must have at least this many tokens
min_contiguous_run_chars: 600        # Minimum chars for a good contiguous content run
min_heading_chars: 3                 # Don't apply uppercase filter to headings shorter than this

# Content selection scoring
link_density_penalty: 1.0            # Multiply score by (1 - link_density)
title_keyword_bonus: 1.5             # Boost paragraphs matching title keywords
event_signal_bonus: 1.2              # Boost paragraphs with event signals (if available)

# Boilerplate detection phrases (case-insensitive)
stop_phrases:
  - "privacy policy"
  - "cookie policy"
  - "terms of use"
  - "by continuing to browse"
  - "we use cookies"
  - "consent to our use"
  - "subscribe to"
  - "sign up"
  - "download our app" 
  - "follow us on"
  - "our mission"
  - "the desk is"
  - "team of journalists"
  - "committed to delivering"
  - "subscribe to our newsletter"
  - "all rights reserved"
  - "copyright"

# Menu/navigation keywords (detect category dumps)
menu_keywords:
  - "world"
  - "politics" 
  - "economy"
  - "business"
  - "sports"
  - "culture"
  - "tech"
  - "science"
  - "opinion"
  - "video"
  - "home"
  - "news"
  - "entertainment"
  - "lifestyle"
  - "health"
  - "travel"
  - "arts"

# Regular expressions for content cleaning
regexes:
  # Strip timestamp lines at start of paragraphs
  timestamp_line: "^(updated|last\\s+updated|published)\\s*[-–—:]?\\s*[A-Za-z]+\\s+\\d{1,2},?\\s+\\d{4}.*$"
  
  # Remove first-line bare URLs (DW issue)
  first_line_url: "^\\s*https?://\\S+\\s*$"
  
  # Remove "also read" / "read more" lines
  also_read: "^(also\\s+read|read\\s+more)\\b.*"
  
  # Detect menu splitter patterns
  menu_splitters: "[\\|•/]|\\s{3,}"

# AMP extraction settings
amp:
  enabled: true
  timeout_seconds: 15
  max_redirects: 3
  user_agent: "Strategic-Narrative-Intelligence/2.0 AMP-Bot"

# Content extraction limits
limits:
  max_content_chars: 50000            # Cap extracted content length
  max_paragraphs: 100                 # Maximum paragraphs to process
  extraction_timeout_seconds: 30      # Timeout for content extraction